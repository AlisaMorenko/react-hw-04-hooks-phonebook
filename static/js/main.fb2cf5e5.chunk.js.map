{"version":3,"sources":["components/Filter/filter.module.css","components/ContactForm/contactForm.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/Contact-list-item.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactListItem/contactListItem.module.css"],"names":["module","exports","ContactForm","onAdd","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","changeInput","e","currentTarget","value","console","log","reset","onSubmit","preventDefault","className","styles","form","htmlFor","label","type","pattern","title","autoComplete","onChange","required","id","input","button","ContactListItem","onDelete","contact","onClick","ContactList","contacts","map","Filter","onFilter","App","JSON","parse","window","localStorage","getItem","initialContacts","setContacts","filter","setFilter","useEffect","setItem","stringify","getVisibleContacts","toLowerCase","includes","addedName","find","alert","contactsId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb2cf5e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3SIkb\",\"input\":\"filter_input__3b2oy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__8A1ig\",\"label\":\"contactForm_label__2tzjE\",\"input\":\"contactForm_input__3h979\",\"button\":\"contactForm_button__2MHWk\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from './contactForm.module.css';\r\n\r\nexport default function ContactForm({ onAdd }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  //create ID\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const changeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return console.log('err');\r\n    }\r\n  };\r\n\r\n  //add new contact\r\n  const submit = e => {\r\n    e.preventDefault();\r\n    onAdd({ name, number });\r\n    reset();\r\n  };\r\n\r\n  // reset input in form\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submit} className={styles.form}>\r\n      <label htmlFor={nameInputId} className={styles.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={changeInput}\r\n          required\r\n          id={nameInputId}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <label htmlFor={numberInputId} className={styles.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          autoComplete=\"off\"\r\n          value={number}\r\n          onChange={changeInput}\r\n          required\r\n          id={numberInputId}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styles.button}>\r\n        add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactListItem.module.css';\r\nconst ContactListItem = ({ id, name, number, onDelete }) => (\r\n  <li className={styles.contact}>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n      className={styles.button}\r\n    >\r\n      X\r\n    </button>\r\n    <span className={styles.name}>{name}</span> <span>tel: {number}</span>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={onDelete}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './filter.module.css';\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      {' '}\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onFilter}\r\n        className={styles.input}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport initialContacts from './contacts.json';\r\nimport shortid from 'shortid';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  //create localStorage\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  //add contact\r\n  const addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    //check added name\r\n    const addedName = contact.name;\r\n    const checkContactsName = contacts.find(\r\n      contact => contact.name.toLowerCase() === addedName.toLowerCase(),\r\n    );\r\n    if (checkContactsName) {\r\n      alert(`${addedName} is already in contacts!`);\r\n      return;\r\n    }\r\n    setContacts(contacts => [contact, ...contacts]);\r\n  };\r\n\r\n  const delContacts = contactsId => {\r\n    setContacts(prevState =>\r\n      prevState.filter(contact => contact.id !== contactsId),\r\n    );\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onAdd={addContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onFilter={changeFilter} />\r\n      <ContactList contacts={getVisibleContacts} onDelete={delContacts} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport './components/basic.css';\r\n\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"contactListItem_contact__Eh-Gc\",\"name\":\"contactListItem_name__2YY-u\",\"button\":\"contactListItem_button__qtQSz\"};"],"sourceRoot":""}